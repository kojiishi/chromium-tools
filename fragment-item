#!/bin/bash
#
# "ng-bot 168" will download the 168 result from the layout_ng bot and update
# the expectation file.
#
# You should be in the "third_party/WebKit" directory, or set "WEBKIT" variable
# to the directory.
#
# # Regular maintenance
#
# 1. Find recent green bot results at:
#    https://luci-milo.appspot.com/buildbot/tryserver.chromium.linux/linux_layout_tests_layout_ng/
# 2. Let's say build #125 and 127 are green. Run following commands:
#    ```bash
#    $ ng-bot 125 127
#    $ ng-bot upload
#    ```
# 3. Review the CL and land it.
#
# ## If bot test results page say "Tests exit early"
#
# Bots exit at certain number of crashes or timeouts. See crbug.com/714203
# When this occurs, downloading results from bots is time consuming. You get
# only first 100 failures or so. After you ran a regular maintenance, you'll
# get next 100.
#
# In such case, you can run tests locally, and update expectations from it.
#
# 1. Run tests locally.
# 2. Run following commands:
#    ```bash
#    $ ng-bot
#    $ git jobs -a
#    $ ng-bot upload
#    ```
# 3. Review the CL and land it.
#
# # Remove fixed tests (optional maintenance)
#
# Since many tests are flaky at this point, the script handles unexpected passes
# as flaky, not as fixed; i.e., it adds [ Failure Pass ] rather than remove.
#
# The following maintenance detects certain number of consecutive passes and
# remove them from expectations.
#
# 1. Download recent success results from bots. If you run regular maintenance,
#    they should be already downloaded in ~/ng-bot/.
# 2. Run following commands:
#    ```bash
#    $ ng-bot -d ~/ng-bot/*.json
#    $ ng-bot upload
#    ```
# 3. Review the CL and land it.
#
MY_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
FLAG=enable-blink-features=LayoutNGFragmentItem
BUILDER=linux-layout-tests-fragment-item
RESULTS_DIR=~/g/layout-test-results/$BUILDER
BUG=${BUG:-982194}
args=()

for arg in "$@"; do
  if [[ $arg == "try" ]]; then
    git cl try -B luci.chromium.try -b $BUILDER
    exit
  fi
  if [[ $arg == up* ]]; then
    COMMIT_MESSAGE=$(git log --format=%B origin..HEAD)
    MESSAGE_FILE=$(mktemp --suffix=-cl-message)
    cat <<EOF >>$MESSAGE_FILE
Update FlagExpectations for LayoutNGFragmentItem

Following bot results are included.
$COMMIT_MESSAGE

0 lines were removed and 0 lines were deflaked by consecutive
results since 0.

TBR=yosin@chromium.org
NOTRY=true
Bug: $BUG
EOF
    git cl upload --message-file=$MESSAGE_FILE
    rm $MESSAGE_FILE
    git cl try -B luci.chromium.try -b $BUILDER
    exit
  fi
  args+=("$arg")
done

(set -x; $MY_DIR/update-expectations -sv -b "$BUG" --flag "$FLAG" "${args[@]}")
